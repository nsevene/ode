version: '3.8'

services:
  # Main application
  app:
    build: .
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./ssl:/etc/nginx/ssl:ro
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    networks:
      - ode-network

  # Development version
  dev:
    build:
      context: .
      target: builder
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    command: npm run dev
    networks:
      - ode-network

  # Nginx reverse proxy (for development)
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./deploy/nginx-dev.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - dev
    networks:
      - ode-network

  # Database (if using local Supabase)
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: odefoodhall
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ode-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ode-network

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - ode-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - ode-network

volumes:
  postgres_data:
  redis_data:
  grafana_data:

networks:
  ode-network:
    driver: bridge
