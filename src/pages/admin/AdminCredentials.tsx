import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { CheckCircle, AlertCircle, Key, User, Mail, Lock } from 'lucide-react';
import { useAuthStore } from '@/store/authStore';

export default function AdminCredentials() {
  const [result, setResult] = useState<{ success: boolean; message: string } | null>(null);
  const { setUser, setSession, setRole, setPermissions } = useAuthStore();

  // –ì–æ—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∞ –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
  const adminCredentials = {
    email: 'admin@odefoodhall.com',
    password: 'Admin123!',
    fullName: 'System Administrator',
    phone: '+62-XXX-XXXX-XXXX'
  };

  const handleLoginWithCredentials = () => {
    try {
      // –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞ —Å –≥–æ—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
      const testAdmin = {
        id: 'admin-' + Date.now(),
        email: adminCredentials.email,
        full_name: adminCredentials.fullName,
        phone: adminCredentials.phone,
        role: 'admin',
        is_active: true,
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString()
      };

      // –°–æ–∑–¥–∞–µ–º authData
      const authData = {
        user: {
          id: testAdmin.id,
          email: testAdmin.email,
          user_metadata: {
            full_name: testAdmin.full_name
          }
        },
        session: {
          access_token: 'admin-token-' + Date.now(),
          refresh_token: 'admin-refresh-' + Date.now()
        },
        role: 'admin',
        permissions: ['admin:read', 'admin:write', 'admin:delete', 'admin:manage'],
        isAuthenticated: true
      };

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
      localStorage.setItem('admin-credentials', JSON.stringify(testAdmin));
      localStorage.setItem('auth-store', JSON.stringify(authData));
      
      // –û–±–Ω–æ–≤–ª—è–µ–º Zustand store
      setUser(authData.user);
      setSession(authData.session);
      setRole('admin');
      setPermissions(authData.permissions);

      setResult({
        success: true,
        message: `–ê–¥–º–∏–Ω ${adminCredentials.email} —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ! –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å...`
      });

      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
      setTimeout(() => {
        window.location.href = '/admin';
      }, 2000);

    } catch (error) {
      console.error('Error creating admin:', error);
      setResult({
        success: false,
        message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–¥–º–∏–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.'
      });
    }
  };

  const handleQuickLogin = () => {
    // –ë—ã—Å—Ç—Ä—ã–π –≤—Ö–æ–¥ —Å –≥–æ—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    const authData = {
      user: {
        id: 'admin-quick',
        email: adminCredentials.email,
        user_metadata: {
          full_name: adminCredentials.fullName
        }
      },
      session: {
        access_token: 'admin-quick-token',
        refresh_token: 'admin-quick-refresh'
      },
      role: 'admin',
      permissions: ['admin:read', 'admin:write', 'admin:delete', 'admin:manage'],
      isAuthenticated: true
    };

    localStorage.setItem('auth-store', JSON.stringify(authData));
    
    // –û–±–Ω–æ–≤–ª—è–µ–º Zustand store
    setUser(authData.user);
    setSession(authData.session);
    setRole('admin');
    setPermissions(authData.permissions);

    setResult({
      success: true,
      message: '–ë—ã—Å—Ç—Ä—ã–π –≤—Ö–æ–¥ –∫–∞–∫ –∞–¥–º–∏–Ω –≤—ã–ø–æ–ª–Ω–µ–Ω! –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º...'
    });

    setTimeout(() => {
      window.location.href = '/admin';
    }, 1000);
  };

  return (
    <div className="min-h-screen bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
      <div className="max-w-2xl mx-auto">
        <Card>
          <CardHeader className="text-center">
            <div className="mx-auto mb-4 flex h-12 w-12 items-center justify-center rounded-full bg-green-100">
              <Key className="h-6 w-6 text-green-600" />
            </div>
            <CardTitle className="text-2xl font-bold text-gray-900">
              –ì–æ—Ç–æ–≤—ã–µ –î–∞–Ω–Ω—ã–µ –ê–¥–º–∏–Ω–∞
            </CardTitle>
            <CardDescription className="text-gray-600">
              –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥–æ—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∞ –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
            </CardDescription>
          </CardHeader>
          
          <CardContent className="space-y-6">
            {/* –ì–æ—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ */}
            <div className="p-4 bg-blue-50 rounded-lg">
              <h3 className="text-sm font-medium text-blue-900 mb-3">üìã –ì–æ—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∞:</h3>
              <div className="space-y-2">
                <div className="flex items-center space-x-2">
                  <Mail className="h-4 w-4 text-blue-600" />
                  <span className="text-sm text-blue-800">
                    <strong>Email:</strong> {adminCredentials.email}
                  </span>
                </div>
                <div className="flex items-center space-x-2">
                  <Lock className="h-4 w-4 text-blue-600" />
                  <span className="text-sm text-blue-800">
                    <strong>Password:</strong> {adminCredentials.password}
                  </span>
                </div>
                <div className="flex items-center space-x-2">
                  <User className="h-4 w-4 text-blue-600" />
                  <span className="text-sm text-blue-800">
                    <strong>Full Name:</strong> {adminCredentials.fullName}
                  </span>
                </div>
              </div>
            </div>

            {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
            <div className="grid grid-cols-1 gap-4 sm:grid-cols-2">
              <Button
                onClick={handleLoginWithCredentials}
                className="bg-green-600 hover:bg-green-700 text-white"
              >
                <Key className="h-4 w-4 mr-2" />
                –°–æ–∑–¥–∞—Ç—å –ê–¥–º–∏–Ω–∞ —Å –î–∞–Ω–Ω—ã–º–∏
              </Button>
              
              <Button
                onClick={handleQuickLogin}
                variant="outline"
                className="border-green-600 text-green-600 hover:bg-green-50"
              >
                <User className="h-4 w-4 mr-2" />
                –ë—ã—Å—Ç—Ä—ã–π –í—Ö–æ–¥ –∫–∞–∫ –ê–¥–º–∏–Ω
              </Button>
            </div>

            {result && (
              <Alert className={`${result.success ? 'border-green-200 bg-green-50' : 'border-red-200 bg-red-50'}`}>
                {result.success ? (
                  <CheckCircle className="h-4 w-4 text-green-600" />
                ) : (
                  <AlertCircle className="h-4 w-4 text-red-600" />
                )}
                <AlertDescription className={result.success ? 'text-green-800' : 'text-red-800'}>
                  {result.message}
                </AlertDescription>
              </Alert>
            )}

            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∞–Ω–Ω—ã—Ö */}
            <div className="p-4 bg-yellow-50 rounded-lg">
              <h3 className="text-sm font-medium text-yellow-900 mb-2">‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</h3>
              <ul className="text-xs text-yellow-800 space-y-1">
                <li>‚Ä¢ –≠—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤–∑—è—Ç—ã –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞</li>
                <li>‚Ä¢ Email: <code>admin@odefoodhall.com</code> - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∞–¥–º–∏–Ω</li>
                <li>‚Ä¢ Password: <code>Admin123!</code> - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–∞—Ä–æ–ª—å</li>
                <li>‚Ä¢ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ localStorage</li>
                <li>‚Ä¢ –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –≤—ã —Å—Ç–∞–Ω–µ—Ç–µ –ø–æ–ª–Ω–æ–ø—Ä–∞–≤–Ω—ã–º –∞–¥–º–∏–Ω–æ–º</li>
              </ul>
            </div>

            {/* –ë—ã—Å—Ç—Ä—ã–µ —Å—Å—ã–ª–∫–∏ */}
            <div className="p-4 bg-gray-50 rounded-lg">
              <h3 className="text-sm font-medium text-gray-900 mb-2">üîó –ë—ã—Å—Ç—Ä—ã–µ —Å—Å—ã–ª–∫–∏:</h3>
              <div className="text-xs text-gray-700 space-y-1">
                <p>‚Ä¢ <a href="/admin" className="text-blue-600 hover:underline">–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å</a></p>
                <p>‚Ä¢ <a href="/admin/users" className="text-blue-600 hover:underline">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</a></p>
                <p>‚Ä¢ <a href="/admin/debug" className="text-blue-600 hover:underline">–û—Ç–ª–∞–¥–∫–∞</a></p>
                <p>‚Ä¢ <a href="/" className="text-blue-600 hover:underline">–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞</a></p>
              </div>
            </div>

            {/* –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è */}
            <div className="p-4 bg-purple-50 rounded-lg">
              <h3 className="text-sm font-medium text-purple-900 mb-2">üìö –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö:</h3>
              <div className="text-xs text-purple-800 space-y-1">
                <p>‚Ä¢ <code>ADMIN_SETUP_GUIDE.md</code> - –æ—Å–Ω–æ–≤–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ</p>
                <p>‚Ä¢ <code>FINAL_SOLUTION.md</code> - —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ</p>
                <p>‚Ä¢ <code>src/lib/supabase.ts</code> - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è</p>
                <p>‚Ä¢ <code>src/lib/supabase-mock.ts</code> - mock –¥–∞–Ω–Ω—ã–µ</p>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}
