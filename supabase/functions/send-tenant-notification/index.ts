import { serve } from 'https://deno.land/std@0.190.0/http/server.ts';
import { Resend } from 'npm:resend@4.0.0';
import { createClient } from 'https://esm.sh/@supabase/supabase-js@2.52.1';
import { renderAsync } from 'npm:@react-email/components@0.0.22';
import React from 'npm:react@18.3.1';

const resend = new Resend(Deno.env.get('RESEND_API_KEY'));

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
};

interface TenantNotificationRequest {
  booking_id: string;
  status: 'approved' | 'rejected' | 'pending';
  admin_comment?: string;
  notify_admins?: boolean;
}

// Simple email template function (since React Email might have import issues in edge functions)
const createEmailHTML = (data: {
  company_name: string;
  contact_person: string;
  status: 'approved' | 'rejected' | 'pending';
  admin_comment?: string;
  booking_id: string;
}) => {
  const { company_name, contact_person, status, admin_comment, booking_id } = data;
  
  const statusText = {
    approved: '–æ–¥–æ–±—Ä–µ–Ω–∞',
    rejected: '–æ—Ç–∫–ª–æ–Ω–µ–Ω–∞', 
    pending: '–Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏'
  };

  const statusColor = {
    approved: '#22c55e',
    rejected: '#ef4444',
    pending: '#f59e0b'
  };

  return `
    <!DOCTYPE html>
    <html>
      <head>
        <meta charset="utf-8">
        <title>ODE Food Hall - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏</title>
      </head>
      <body style="font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px;">
        <div style="text-align: center; margin-bottom: 30px;">
          <h1 style="color: #8B0000; margin-bottom: 10px;">ODE Food Hall</h1>
          <div style="width: 50px; height: 3px; background-color: #FFC107; margin: 0 auto;"></div>
        </div>

        <div style="background-color: #f8f9fa; padding: 30px; border-radius: 8px; margin-bottom: 20px;">
          <h2 style="color: ${statusColor[status]}; margin-top: 0;">
            ${status === 'approved' ? 'üéâ –ó–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞!' : 
              status === 'rejected' ? 'üìã –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏' : 
              '‚è≥ –ó–∞—è–≤–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞'}
          </h2>
          
          <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, <strong>${contact_person}</strong>!</p>
          
          <p>
            ${status === 'approved' 
              ? `–û—Ç–ª–∏—á–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ <strong>${company_name}</strong> –Ω–∞ –∞—Ä–µ–Ω–¥—É –ø–æ–º–µ—â–µ–Ω–∏—è –≤ ODE Food Hall –±—ã–ª–∞ <strong style="color: ${statusColor[status]};">–æ–¥–æ–±—Ä–µ–Ω–∞</strong>.`
              : status === 'rejected'
              ? `–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –º—ã –Ω–µ –º–æ–∂–µ–º –æ–¥–æ–±—Ä–∏—Ç—å –∑–∞—è–≤–∫—É –æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ <strong>${company_name}</strong> –Ω–∞ –∞—Ä–µ–Ω–¥—É –ø–æ–º–µ—â–µ–Ω–∏—è –≤ ODE Food Hall –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç.`
              : `–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É –æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ <strong>${company_name}</strong> –Ω–∞ –∞—Ä–µ–Ω–¥—É –ø–æ–º–µ—â–µ–Ω–∏—è –≤ ODE Food Hall. –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞ –∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏.`
            }
          </p>

          ${admin_comment ? `
            <div style="background-color: #e9ecef; padding: 15px; border-radius: 6px; margin: 20px 0; border-left: 4px solid ${statusColor[status]};">
              <p style="margin: 0; font-weight: bold; color: #495057; font-size: 14px;">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã:</p>
              <p style="margin: 8px 0 0 0; color: #495057; font-style: italic;">${admin_comment}</p>
            </div>
          ` : ''}

          ${status === 'approved' ? `
            <div style="background-color: #d4edda; border: 1px solid #c3e6cb; border-radius: 6px; padding: 20px; margin: 20px 0;">
              <p style="margin: 0 0 10px 0; font-weight: bold; color: #155724;">–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:</p>
              <ul style="margin: 0; color: #155724;">
                <li>–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 2-3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π</li>
                <li>–ú—ã –æ–±—Å—É–¥–∏–º –¥–µ—Ç–∞–ª–∏ –¥–æ–≥–æ–≤–æ—Ä–∞ –∞—Ä–µ–Ω–¥—ã</li>
                <li>–ó–∞–ø–ª–∞–Ω–∏—Ä—É–µ–º –≤—Å—Ç—Ä–µ—á—É –¥–ª—è –æ—Å–º–æ—Ç—Ä–∞ –ø–æ–º–µ—â–µ–Ω–∏—è</li>
                <li>–ü—Ä–æ–≤–µ–¥–µ–º –≤–∞—Å —á–µ—Ä–µ–∑ –ø—Ä–æ—Ü–µ—Å—Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è</li>
              </ul>
            </div>
          ` : status === 'rejected' ? `
            <p style="color: #721c24;">
              –ú—ã —Ü–µ–Ω–∏–º –≤–∞—à –∏–Ω—Ç–µ—Ä–µ—Å –∫ ODE Food Hall. –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã 
              –æ–±—Å—É–¥–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ –≤ –±—É–¥—É—â–µ–º, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –Ω–∞–º.
            </p>
          ` : `
            <p>
              –ú—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –≤–∞—à—É –∑–∞—è–≤–∫—É –∏ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 2-3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π. 
              –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –≤—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –ø–æ —É–∫–∞–∑–∞–Ω–Ω—ã–º –Ω–∏–∂–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º.
            </p>
          `}

          <div style="background-color: #fff; border: 1px solid #dee2e6; border-radius: 6px; padding: 20px; margin-top: 30px;">
            <p style="margin: 0 0 10px 0; font-weight: bold;">–ö–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è —Å–≤—è–∑–∏:</p>
            <p style="margin: 5px 0;">üìß Email: <a href="mailto:tenants@odefoodhall.com" style="color: #8B0000;">tenants@odefoodhall.com</a></p>
            <p style="margin: 5px 0;">üì± –¢–µ–ª–µ—Ñ–æ–Ω: <a href="tel:+6236112345667" style="color: #8B0000;">+62 361 123 4567</a></p>
            <p style="margin: 5px 0;">üìç –ê–¥—Ä–µ—Å: Jl. Batu Bolong, Canggu, Bali</p>
          </div>
        </div>

        <div style="text-align: center; color: #6c757d; font-size: 14px; margin-top: 30px;">
          <p>–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br><strong>–ö–æ–º–∞–Ω–¥–∞ ODE Food Hall</strong></p>
          <p style="font-size: 12px;">
            –ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏: ${booking_id.slice(-8)}<br>
            –≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–∏—Å—å–º–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –Ω–µ–≥–æ.
          </p>
        </div>
      </body>
    </html>
  `;
};

const createAdminNotificationHTML = (data: {
  company_name: string;
  contact_person: string;
  email: string;
  business_type: string;
  booking_id: string;
  status: string;
}) => {
  const { company_name, contact_person, email, business_type, booking_id, status } = data;
  
  return `
    <!DOCTYPE html>
    <html>
      <head>
        <meta charset="utf-8">
        <title>ODE Admin - –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∞—Ä–µ–Ω–¥—É</title>
      </head>
      <body style="font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px;">
        <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; border-left: 4px solid #8B0000;">
          <h2 style="color: #8B0000; margin-top: 0;">üè¢ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∞—Ä–µ–Ω–¥—É</h2>
          
          <p>–ü–æ–ª—É—á–µ–Ω–∞ –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∞—Ä–µ–Ω–¥—É –ø–æ–º–µ—â–µ–Ω–∏—è:</p>
          
          <div style="background-color: #fff; padding: 15px; border-radius: 6px; margin: 15px 0;">
            <p><strong>–ö–æ–º–ø–∞–Ω–∏—è:</strong> ${company_name}</p>
            <p><strong>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ:</strong> ${contact_person}</p>
            <p><strong>Email:</strong> <a href="mailto:${email}" style="color: #8B0000;">${email}</a></p>
            <p><strong>–¢–∏–ø –±–∏–∑–Ω–µ—Å–∞:</strong> ${business_type}</p>
            <p><strong>–°—Ç–∞—Ç—É—Å:</strong> <span style="color: #f59e0b;">–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏</span></p>
          </div>
          
          <div style="text-align: center; margin: 20px 0;">
            <a href="https://odefoodhall.com/admin" 
               style="background-color: #8B0000; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; font-weight: bold;">
              –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
            </a>
          </div>
          
          <p style="font-size: 12px; color: #6c757d;">
            –ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏: ${booking_id.slice(-8)}<br>
            –í—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è: ${new Date().toLocaleString('ru-RU')}
          </p>
        </div>
      </body>
    </html>
  `;
};

const handler = async (req: Request): Promise<Response> => {
  // Handle CORS preflight requests
  if (req.method === 'OPTIONS') {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const supabase = createClient(
      Deno.env.get('SUPABASE_URL') ?? '',
      Deno.env.get('SUPABASE_SERVICE_ROLE_KEY') ?? ''
    );

    const { booking_id, status, admin_comment, notify_admins }: TenantNotificationRequest = await req.json();

    console.log(`Processing notification for booking ${booking_id}, status: ${status}`);

    // Get booking details
    const { data: booking, error: bookingError } = await supabase
      .from('space_bookings')
      .select('*')
      .eq('id', booking_id)
      .single();

    if (bookingError || !booking) {
      throw new Error(`Booking not found: ${bookingError?.message}`);
    }

    // Send notification to applicant
    const applicantEmailHTML = createEmailHTML({
      company_name: booking.company_name,
      contact_person: booking.contact_person,
      status: status,
      admin_comment: admin_comment,
      booking_id: booking_id
    });

    const subjectMap = {
      approved: `üéâ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞ - ${booking.company_name}`,
      rejected: `üìã –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ –∑–∞—è–≤–∫–µ - ${booking.company_name}`,
      pending: `‚è≥ –ó–∞—è–≤–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞ - ${booking.company_name}`
    };

    console.log(`Sending email to applicant: ${booking.email}`);

    const applicantEmailResult = await resend.emails.send({
      from: 'ODE Food Hall <tenants@odefoodhall.com>',
      to: [booking.email],
      subject: subjectMap[status],
      html: applicantEmailHTML,
    });

    console.log('Applicant email sent:', applicantEmailResult);

    // Send notification to admins for new applications
    if (notify_admins && status === 'pending') {
      const adminEmailHTML = createAdminNotificationHTML({
        company_name: booking.company_name,
        contact_person: booking.contact_person,
        email: booking.email,
        business_type: booking.business_type,
        booking_id: booking_id,
        status: status
      });

      // Get admin emails
      const { data: adminUsers, error: adminError } = await supabase
        .from('user_roles')
        .select(`
          user_id,
          profiles!user_roles_user_id_fkey(id)
        `)
        .eq('role', 'admin');

      if (!adminError && adminUsers?.length) {
        // For demo purposes, send to a predefined admin email
        // In production, you'd get actual admin emails from the profiles
        console.log('Sending admin notification email');

        const adminEmailResult = await resend.emails.send({
          from: 'ODE System <system@odefoodhall.com>',
          to: ['admin@odefoodhall.com'], // Replace with actual admin emails
          subject: `üè¢ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∞—Ä–µ–Ω–¥—É –æ—Ç ${booking.company_name}`,
          html: adminEmailHTML,
        });

        console.log('Admin email sent:', adminEmailResult);
      }
    }

    return new Response(
      JSON.stringify({ 
        success: true, 
        message: 'Notifications sent successfully',
        applicant_email: booking.email,
        status: status
      }),
      {
        status: 200,
        headers: { 'Content-Type': 'application/json', ...corsHeaders },
      }
    );

  } catch (error: any) {
    console.error('Error in send-tenant-notification function:', error);
    return new Response(
      JSON.stringify({ 
        error: error.message,
        details: error.stack 
      }),
      {
        status: 500,
        headers: { 'Content-Type': 'application/json', ...corsHeaders },
      }
    );
  }
};

serve(handler);